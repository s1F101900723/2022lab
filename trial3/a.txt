float melolist[]={27.5,29.135,30.868,
        32.703,34.648,36.708,38.891,41.203,43.654,46.249,48.999,51.913,55,58.27,61.735,
        65.406,69.296,73.416,77.782,82.407,87.307,92.499,97.999,103.826,110,116.541,123.471,
        130.813,138.591,146.832,155.563,164.814,174.614,184.997,195.998,207.652,220,233.082,246.942,
        261.626,277.183,293.665,311.127,329.628,349.228,369.994,391.995,415.305,440,466.164,493.883,
        523.251,554.365,587.33,622.254,659.255,698.456,739.989,783.991,830.609,880,932.328,987.767,
        1046.502
      };
int melo = 300;   // 音の長さを指定
int pin = 13;     // ブザーを接続したピン番号

int TRIG = 3;
int ECHO = 2;
int Step = 1;
float duration = 0;
float distance = 0;
int maxdistance = 63;
int mindistance = 0;
float speed_of_sound = 331.5 + 0.6 * 25; // 25℃の気温の想定
float frequency =0;
int Fre=1;
/*int photoResistor = A5;*/
/*int bright;*/
int powerstatus = 0;
int intdistance;

void setup() {
  Serial.begin( 115200 );
  /*pinMode(photoResistor, INPUT);*/
  pinMode(ECHO, INPUT );
  pinMode(TRIG, OUTPUT );
}

void loop() {

  while (Serial.available()) {
    String command = Serial.readStringUntil('\n');
    if (command[0]=='L') {/*音の長さ*/
      melo = (command.substring(1)).toInt();
    }else if (command[0]=='M') {/*手⇔全身モード切り替え*/
      if (command=="Mhand") {
        maxdistance=63;
        mindistance=0;
        Step=1;
      }
      else {
        maxdistance=315;
        mindistance=0;
        Step=5;
      }
    }else if (command[0]=='S') {/*演奏状態*/
      if (command=="SON") {
        powerstatus=1;
      }
      else {
        powerstatus=0;
      }
    }else if (command[0]=='F') {/*音階*/
      if (command=="FON") {
        Fre=1;
      }
      else {
        Fre=0;
      }
    }
  }
  
  digitalWrite(TRIG, LOW); 
  delayMicroseconds(2); 
  digitalWrite( TRIG, HIGH );
  delayMicroseconds( 10 ); 
  digitalWrite( TRIG, LOW );
  duration = pulseIn( ECHO, HIGH ); // 往復にかかった時間が返却される[マイクロ秒]
/*27.5*(2^(1/12))^n    27.5*(2^(1/12))^(252/4)  27.5*(2^(1/12))^63*/
  if (powerstatus==1 && duration > 0) {
    duration = duration / 2; // 往路にかかった時間
    distance = (duration * speed_of_sound * 100 / 1000000);
    intdistance =(int) distance;
    if (intdistance <= maxdistance & intdistance >= mindistance){
      /*frequency=27.5*(2^(1/12))^(distance/Step);*/
      if (Fre == 0){
        int elem1=intdistance/Step;
        frequency=melolist[elem1];
      }else {
        frequency=5*(intdistance/Step);
      }
      Serial.println(distance);
      tone(pin,frequency,melo);
      delay(melo);
    }else{
      Serial.println(0);
      delay(melo);
    }
  }
}